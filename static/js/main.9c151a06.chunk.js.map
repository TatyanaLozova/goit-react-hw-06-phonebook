{"version":3,"sources":["Components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContacts","createAction","values","payload","id","uuidv4","name","number","deleteContacts","filterContacts","items","createReducer","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","form","label","input","type","onChange","btnAdd","Component","connect","dispatch","contact","allContacts","normalizedFilter","toLowerCase","includes","onDeleteContact","map","btn","onClick","filterValue","onChangeFilter","ev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c151a06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__1L32D\",\"btn\":\"ContactList_btn__396FG\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContacts = createAction('contacts/add', values => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name: values.name,\r\n        number: values.number\r\n    },\r\n}));\r\n\r\nconst deleteContacts = createAction('contacts/delete');\r\n\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\n\r\nexport { addContacts, deleteContacts, filterContacts };\r\n","\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux'\r\nimport { addContacts, deleteContacts, filterContacts } from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [addContacts]: (state, { payload }) => [...state, payload],\r\n    [deleteContacts]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContacts]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({ items, filter, });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// redux\r\n// import types from './contacts-types';\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import { combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n//  ****after\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions:\r\n        [FLUSH,\r\n          REHYDRATE,\r\n          PAUSE,\r\n          PERSIST,\r\n          PURGE,\r\n          REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React, { Component } from 'react'\r\nimport s from './ContactForm.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport {addContacts} from \"../../redux/contacts/contacts-actions\";\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={s.form} onSubmit={this.handleSubmit}>\r\n                <label className={s.label}>\r\n                    Name\r\n                     <input className={s.input} \r\n                     type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                       \r\n                    />\r\n                </label>\r\n                <label className={s.label} >\r\n                    Number\r\n          <input className={s.input}\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                      \r\n                    />\r\n                </label>\r\n                <button className={s.btnAdd} type=\"submit\">\r\n                    Add contact\r\n        </button>\r\n                \r\n            </form>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(addContacts(contact)),\r\n});\r\n    \r\nexport default connect(mapStateToProps,mapDispatchToProps) (ContactForm);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.css'\r\nimport {deleteContacts} from \"../../redux/contacts/contacts-actions\";\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul >\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contact} key={id}>\r\n              <p>{name}: </p>\r\n              <p>{number}</p>\r\n          <button className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst filterContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({contacts: { items, filter } }) => ({\r\n  contacts: filterContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContacts(id)),\r\n});\r\n    \r\nexport default connect(mapStateToProps,mapDispatchToProps) (ContactList);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\r\n\r\n\r\nconst Filter = ({ filterValue, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input  className={s.input}\r\n        type=\"text\"\r\n        value={filterValue}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterValue: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (ev) => dispatch(filterContacts(ev.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\nimport ContactForm from './Components/ContactForm/ContactForm'\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter'\n\n\nimport './App.css';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1> Phonebook task #5</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\n\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   componentDidMount () {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     const nextContacts = this.state.contacts;\n//     const prevContacts = prevState.contacts;\n\n//     if (nextContacts !== prevContacts) {\n//       localStorage.setItem('contacts', JSON.stringify(nextContacts))\n//     }\n    \n//   }\n      \n  \n\n//   // добавляем контакт\n//   addContact = ({name, number}) => {\n//     const { contacts } = this.state;\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n\n    \n//     if (\n//       contacts.find(\n//         (contact) => contact.name.toLowerCase() === name.toLowerCase()\n//       )\n//     ) {\n//       alert(`${name} is already in contacts!`);\n//       return;\n//     } else {\n//       this.setState((prevState) => ({\n//           contacts: [contact, ...prevState.contacts],\n//       }));\n//     }\n//   };\n//    // удаляет контакты\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n// // Фильтр \n//      changeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//     };\n  \n//   filterContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normFilter = filter.toLowerCase();\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normFilter)\n//     );\n//   };\n  \n//   render() {\n//     const {\n//       addContact,\n//       changeFilter,\n//       filterContacts,\n//       deleteContact,\n     \n//     } = this;\n    \n    \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport { PersistGate } from 'redux-persist/es/integration/react'\n\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n         <Provider store={store.store}>\n      <PersistGate persistor={store.persistor}>\n         <BrowserRouter>\n          <App />\n          </BrowserRouter>\n        </PersistGate>\n      </Provider>\n      </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3-VN3\",\"input\":\"ContactForm_input__214al\",\"btnAdd\":\"ContactForm_btnAdd__3ATqC\",\"label\":\"ContactForm_label__QqumO\"};"],"sourceRoot":""}